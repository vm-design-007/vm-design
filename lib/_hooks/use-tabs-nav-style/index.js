"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const s=require("vue"),d=require("../../_utils/utils/index.js"),f=r=>{const e=s.getCurrentInstance(),l=s.ref({}),a=s.computed(()=>r.navs?Math.max(r.navs.findIndex(n=>n.name===r.activeName),0):0),u=async()=>{if(await s.nextTick(),!e||!e.subTree.el)return;const{position:n}=r,t={},o=e.subTree.el.querySelectorAll(".v-tabs-nav__item");if(!o||!o.length)return;const i=o[a.value],v=window&&window.getComputedStyle(i);n==="top"||n==="bottom"?(t.width=i.clientWidth-d.sizeToNum(v.padding)+"px",t.bottom=0,t.transform=`translateX(${i.offsetLeft}px)`):(n==="left"||n==="right")&&(t.height=i.clientHeight-d.sizeToNum(v.padding)+"px",t.transform=`translateY(${i.offsetTop}px)`,n==="left"?t.right=0:t.left=0),l.value=t},c=new IntersectionObserver(u);return s.onMounted(()=>{!e||!e.subTree.el||c.observe(e.subTree.el)}),s.onUnmounted(()=>{!e||!e.subTree.el||c.unobserve(e.subTree.el)}),{activeIndex:a,activeLineStyle:l,setActiveLineStyle:u}};exports.useTabsNavStyle=f;
