import type { LinkState } from './interface';
import type { BasicType, VmType, VmTarget, VmIcon, HandleEvent } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    readonly type: BasicType<PropType<VmType>, VmType | null>;
    readonly href: BasicType<PropType<string>, string | null>;
    readonly size: BasicType<PropType<string | number>, string | number | null>;
    readonly state: BasicType<PropType<LinkState>, LinkState | null>;
    readonly disabled: BasicType<BooleanConstructor, boolean>;
    readonly target: BasicType<PropType<VmTarget>, VmTarget | null>;
    readonly color: BasicType<PropType<string>, string | null>;
    readonly hoverColor: BasicType<PropType<string>, string | null>;
    readonly noCopy: BasicType<BooleanConstructor, boolean>;
    readonly noLink: BasicType<BooleanConstructor, boolean>;
    readonly beforeIcon: BasicType<PropType<VmIcon>, null>;
    readonly afterIcon: BasicType<PropType<VmIcon>, null>;
    readonly onClick: BasicType<PropType<HandleEvent>, null>;
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    readonly type: BasicType<PropType<VmType>, VmType | null>;
    readonly href: BasicType<PropType<string>, string | null>;
    readonly size: BasicType<PropType<string | number>, string | number | null>;
    readonly state: BasicType<PropType<LinkState>, LinkState | null>;
    readonly disabled: BasicType<BooleanConstructor, boolean>;
    readonly target: BasicType<PropType<VmTarget>, VmTarget | null>;
    readonly color: BasicType<PropType<string>, string | null>;
    readonly hoverColor: BasicType<PropType<string>, string | null>;
    readonly noCopy: BasicType<BooleanConstructor, boolean>;
    readonly noLink: BasicType<BooleanConstructor, boolean>;
    readonly beforeIcon: BasicType<PropType<VmIcon>, null>;
    readonly afterIcon: BasicType<PropType<VmIcon>, null>;
    readonly onClick: BasicType<PropType<HandleEvent>, null>;
}>>, {
    readonly type: VmType;
    readonly color: string;
    readonly beforeIcon: VmIcon;
    readonly size: string | number;
    readonly href: string;
    readonly target: VmTarget;
    readonly disabled: boolean;
    readonly afterIcon: VmIcon;
    readonly onClick: HandleEvent;
    readonly hoverColor: string;
    readonly state: LinkState;
    readonly noCopy: boolean;
    readonly noLink: boolean;
}>;
export default _sfc_main;
