import type { ButtonNative } from './interface';
import type { BasicType } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes } from 'vue';
import type { VmSize, VmTarget, VmType, HandleMouse, VmIcon } from '../../_interface';
declare const _sfc_main: DefineComponent<{
    readonly bold: BasicType<BooleanConstructor, boolean>;
    readonly circle: BasicType<BooleanConstructor, boolean>;
    readonly round: BasicType<BooleanConstructor, boolean>;
    readonly spread: BasicType<BooleanConstructor, boolean>;
    readonly fontSize: BasicType<PropType<string | number>, string | number | null>;
    readonly fontColor: BasicType<PropType<string>, string | null>;
    readonly size: BasicType<PropType<VmSize>, VmSize | null>;
    readonly block: BasicType<BooleanConstructor, boolean>;
    readonly href: BasicType<PropType<string>, string | null>;
    readonly target: BasicType<PropType<VmTarget>, VmTarget | null>;
    readonly loading: BasicType<BooleanConstructor, boolean>;
    readonly disabled: BasicType<BooleanConstructor, boolean>;
    readonly loadingIcon: BasicType<PropType<VmIcon>, null>;
    readonly type: BasicType<PropType<VmType>, VmType | null>;
    readonly autofocus: BasicType<BooleanConstructor, boolean>;
    readonly name: BasicType<PropType<string>, string | null>;
    readonly shadow: BasicType<PropType<string>, string | null>;
    readonly text: BasicType<BooleanConstructor, boolean>;
    readonly nativeType: BasicType<PropType<ButtonNative>, ButtonNative | null>;
    readonly simple: BasicType<BooleanConstructor, boolean>;
    readonly beforeIcon: BasicType<PropType<VmIcon>, null>;
    readonly afterIcon: BasicType<PropType<VmIcon>, null>;
    readonly ripples: BasicType<BooleanConstructor, boolean>;
    readonly ripplesColor: BasicType<PropType<string>, string | null>;
    readonly color: BasicType<PropType<string>, string | null>;
    readonly onClick: BasicType<PropType<HandleMouse>, null>;
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    readonly bold: BasicType<BooleanConstructor, boolean>;
    readonly circle: BasicType<BooleanConstructor, boolean>;
    readonly round: BasicType<BooleanConstructor, boolean>;
    readonly spread: BasicType<BooleanConstructor, boolean>;
    readonly fontSize: BasicType<PropType<string | number>, string | number | null>;
    readonly fontColor: BasicType<PropType<string>, string | null>;
    readonly size: BasicType<PropType<VmSize>, VmSize | null>;
    readonly block: BasicType<BooleanConstructor, boolean>;
    readonly href: BasicType<PropType<string>, string | null>;
    readonly target: BasicType<PropType<VmTarget>, VmTarget | null>;
    readonly loading: BasicType<BooleanConstructor, boolean>;
    readonly disabled: BasicType<BooleanConstructor, boolean>;
    readonly loadingIcon: BasicType<PropType<VmIcon>, null>;
    readonly type: BasicType<PropType<VmType>, VmType | null>;
    readonly autofocus: BasicType<BooleanConstructor, boolean>;
    readonly name: BasicType<PropType<string>, string | null>;
    readonly shadow: BasicType<PropType<string>, string | null>;
    readonly text: BasicType<BooleanConstructor, boolean>;
    readonly nativeType: BasicType<PropType<ButtonNative>, ButtonNative | null>;
    readonly simple: BasicType<BooleanConstructor, boolean>;
    readonly beforeIcon: BasicType<PropType<VmIcon>, null>;
    readonly afterIcon: BasicType<PropType<VmIcon>, null>;
    readonly ripples: BasicType<BooleanConstructor, boolean>;
    readonly ripplesColor: BasicType<PropType<string>, string | null>;
    readonly color: BasicType<PropType<string>, string | null>;
    readonly onClick: BasicType<PropType<HandleMouse>, null>;
}>>, {
    readonly type: VmType;
    readonly fontSize: string | number;
    readonly bold: boolean;
    readonly simple: boolean;
    readonly round: boolean;
    readonly color: string;
    readonly beforeIcon: VmIcon;
    readonly size: VmSize;
    readonly fontColor: string;
    readonly text: boolean;
    readonly circle: boolean;
    readonly spread: boolean;
    readonly block: boolean;
    readonly href: string;
    readonly target: VmTarget;
    readonly loading: boolean;
    readonly disabled: boolean;
    readonly loadingIcon: VmIcon;
    readonly autofocus: boolean;
    readonly name: string;
    readonly shadow: string;
    readonly nativeType: ButtonNative;
    readonly afterIcon: VmIcon;
    readonly ripples: boolean;
    readonly ripplesColor: string;
    readonly onClick: HandleMouse;
}>;
export default _sfc_main;
