import type { VmFit, HandleEvent } from '..';
import type { DefineComponent, PropType, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes } from 'vue';
import type { Install, BasicType } from '../_utils';
import Image from "./src/image";
export declare const VImage: Install<DefineComponent<{
    readonly src: BasicType<PropType<string>, string | null>;
    readonly alt: BasicType<PropType<string>, string | null>;
    readonly draggable: BasicType<BooleanConstructor, boolean>;
    readonly lazy: BasicType<BooleanConstructor, boolean>;
    readonly rootMargin: BasicType<PropType<string | number>, string | number | null>;
    readonly width: BasicType<PropType<string | number>, string | number | null>;
    readonly height: BasicType<PropType<string | number>, string | number | null>;
    readonly block: BasicType<BooleanConstructor, boolean>;
    readonly fit: BasicType<PropType<VmFit>, VmFit | null>;
    readonly select: BasicType<BooleanConstructor, boolean>;
    readonly referrerPolicy: BasicType<PropType<string>, string | null>;
    readonly round: BasicType<PropType<string | number>, string | number | null>;
    readonly errSrc: BasicType<PropType<string>, string | null>;
    readonly title: BasicType<PropType<string>, string | null>;
    readonly onLoad: BasicType<PropType<HandleEvent>, null>;
    readonly onError: BasicType<PropType<HandleEvent>, null>;
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    readonly src: BasicType<PropType<string>, string | null>;
    readonly alt: BasicType<PropType<string>, string | null>;
    readonly draggable: BasicType<BooleanConstructor, boolean>;
    readonly lazy: BasicType<BooleanConstructor, boolean>;
    readonly rootMargin: BasicType<PropType<string | number>, string | number | null>;
    readonly width: BasicType<PropType<string | number>, string | number | null>;
    readonly height: BasicType<PropType<string | number>, string | number | null>;
    readonly block: BasicType<BooleanConstructor, boolean>;
    readonly fit: BasicType<PropType<VmFit>, VmFit | null>;
    readonly select: BasicType<BooleanConstructor, boolean>;
    readonly referrerPolicy: BasicType<PropType<string>, string | null>;
    readonly round: BasicType<PropType<string | number>, string | number | null>;
    readonly errSrc: BasicType<PropType<string>, string | null>;
    readonly title: BasicType<PropType<string>, string | null>;
    readonly onLoad: BasicType<PropType<HandleEvent>, null>;
    readonly onError: BasicType<PropType<HandleEvent>, null>;
}>>, {
    readonly title: string;
    readonly round: string | number;
    readonly width: string | number;
    readonly src: string;
    readonly errSrc: string;
    readonly alt: string;
    readonly lazy: boolean;
    readonly fit: VmFit;
    readonly rootMargin: string | number;
    readonly onLoad: HandleEvent;
    readonly onError: HandleEvent;
    readonly block: boolean;
    readonly height: string | number;
    readonly draggable: boolean;
    readonly select: boolean;
    readonly referrerPolicy: string;
}>>;
/** image 组件实例类型 */
export type ImageInstance = InstanceType<typeof Image>;
export * from './src/interface';
export default VImage;
